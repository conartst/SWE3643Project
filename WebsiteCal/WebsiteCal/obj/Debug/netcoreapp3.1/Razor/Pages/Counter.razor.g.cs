#pragma checksum "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "417a2435dceecb40bae2be9f6c2e283a44c1653a"
// <auto-generated/>
#pragma warning disable 1591
namespace WebsiteCal.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\_Imports.razor"
using WebsiteCal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\_Imports.razor"
using WebsiteCal.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
using Calculator3;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Counter : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h1>Calculator</h1>\r\n\r\n");
            __builder.OpenElement(1, "div");
            __builder.AddAttribute(2, "id", "textbox");
            __builder.AddAttribute(3, "style", (
#nullable restore
#line 5 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                          ColorBox

#line default
#line hidden
#nullable disable
            ) + ":" + " #FFECD7;" + " padding:" + " 5px;" + " width:" + " 500px;" + " height:" + " 50px;" + " text-align:" + " center;" + " display:" + " flex;" + " justify-content:" + " center;" + " align-items:" + " center;");
            __builder.AddAttribute(4, "contenteditable", "false");
            __builder.AddMarkupContent(5, "\r\n    ");
            __builder.AddContent(6, 
#nullable restore
#line 6 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
     SinCosTanRecip

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(7, " ");
            __builder.AddContent(8, 
#nullable restore
#line 6 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                     Input1

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(9, " ");
            __builder.AddContent(10, 
#nullable restore
#line 6 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                             Symbol

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(11, " ");
            __builder.AddContent(12, 
#nullable restore
#line 6 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                     Input2

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(13, " <br> ");
            __builder.AddContent(14, 
#nullable restore
#line 6 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                                  AnswerString

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(15, " ");
            __builder.AddContent(16, 
#nullable restore
#line 6 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                                                Error

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(17, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(18, "\r\n\r\n\r\n");
            __builder.OpenElement(19, "button");
            __builder.AddAttribute(20, "class", "btn btn-primary");
            __builder.AddAttribute(21, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 10 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                          Clearing

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(22, "Clear");
            __builder.CloseElement();
            __builder.AddMarkupContent(23, "\r\n\r\n\r\n");
            __builder.OpenElement(24, "input");
            __builder.AddAttribute(25, "type", "text");
            __builder.AddAttribute(26, "placeholder", "Enter Number A");
            __builder.AddAttribute(27, "value", Microsoft.AspNetCore.Components.BindConverter.FormatValue(
#nullable restore
#line 14 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                          myNumber

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(28, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => myNumber = __value, myNumber));
            __builder.SetUpdatesAttributeName("value");
            __builder.CloseElement();
            __builder.AddMarkupContent(29, "\r\n");
            __builder.OpenElement(30, "input");
            __builder.AddAttribute(31, "type", "text");
            __builder.AddAttribute(32, "placeholder", "Enter Number B");
            __builder.AddAttribute(33, "value", Microsoft.AspNetCore.Components.BindConverter.FormatValue(
#nullable restore
#line 15 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                          myNumber2

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(34, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => myNumber2 = __value, myNumber2));
            __builder.SetUpdatesAttributeName("value");
            __builder.CloseElement();
            __builder.AddMarkupContent(35, "\r\n\r\n");
            __builder.AddMarkupContent(36, "<div class=\"button-column\">\r\n    <input type=\"text\" value=\"A and B\" readonly contenteditable=\"false\">\r\n    <input type=\"text\" value=\"A Only\" readonly contenteditable=\"false\">\r\n</div>\r\n\r\n");
            __builder.OpenElement(37, "div");
            __builder.AddAttribute(38, "class", "button-column");
            __builder.AddMarkupContent(39, "\r\n    ");
            __builder.OpenElement(40, "button");
            __builder.AddAttribute(41, "class", "btn btn-primary");
            __builder.AddAttribute(42, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 23 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              Adding

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(43, "Add");
            __builder.CloseElement();
            __builder.AddMarkupContent(44, "\r\n    ");
            __builder.OpenElement(45, "button");
            __builder.AddAttribute(46, "class", "btn btn-primary");
            __builder.AddAttribute(47, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 24 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              Factorialing

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(48, "Factorial");
            __builder.CloseElement();
            __builder.AddMarkupContent(49, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(50, "\r\n\r\n");
            __builder.OpenElement(51, "div");
            __builder.AddAttribute(52, "class", "button-column");
            __builder.AddMarkupContent(53, "\r\n    ");
            __builder.OpenElement(54, "button");
            __builder.AddAttribute(55, "class", "btn btn-primary");
            __builder.AddAttribute(56, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 28 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              Subtracting

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(57, "Subtract");
            __builder.CloseElement();
            __builder.AddMarkupContent(58, "\r\n    ");
            __builder.OpenElement(59, "button");
            __builder.AddAttribute(60, "class", "btn btn-primary");
            __builder.AddAttribute(61, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 29 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              SinAing

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(62, "Sin A");
            __builder.CloseElement();
            __builder.AddMarkupContent(63, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(64, "\r\n\r\n");
            __builder.OpenElement(65, "div");
            __builder.AddAttribute(66, "class", "button-column");
            __builder.AddMarkupContent(67, "\r\n    ");
            __builder.OpenElement(68, "button");
            __builder.AddAttribute(69, "class", "btn btn-primary");
            __builder.AddAttribute(70, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 33 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              Multiplying

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(71, "Multiply");
            __builder.CloseElement();
            __builder.AddMarkupContent(72, "\r\n    ");
            __builder.OpenElement(73, "button");
            __builder.AddAttribute(74, "class", "btn btn-primary");
            __builder.AddAttribute(75, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 34 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              CosAing

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(76, "Cos A");
            __builder.CloseElement();
            __builder.AddMarkupContent(77, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(78, "\r\n\r\n");
            __builder.OpenElement(79, "div");
            __builder.AddAttribute(80, "class", "button-column");
            __builder.AddMarkupContent(81, "\r\n    ");
            __builder.OpenElement(82, "button");
            __builder.AddAttribute(83, "class", "btn btn-primary");
            __builder.AddAttribute(84, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 38 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              Dividing

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(85, "Divide");
            __builder.CloseElement();
            __builder.AddMarkupContent(86, "\r\n    ");
            __builder.OpenElement(87, "button");
            __builder.AddAttribute(88, "class", "btn btn-primary");
            __builder.AddAttribute(89, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 39 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              TanAing

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(90, "Tan A");
            __builder.CloseElement();
            __builder.AddMarkupContent(91, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(92, "\r\n\r\n");
            __builder.OpenElement(93, "div");
            __builder.AddAttribute(94, "class", "button-column");
            __builder.AddMarkupContent(95, "\r\n    ");
            __builder.OpenElement(96, "button");
            __builder.AddAttribute(97, "class", "btn btn-primary");
            __builder.AddAttribute(98, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 43 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              Equals

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(99, "Equal");
            __builder.CloseElement();
            __builder.AddMarkupContent(100, "\r\n    ");
            __builder.OpenElement(101, "button");
            __builder.AddAttribute(102, "class", "btn btn-primary");
            __builder.AddAttribute(103, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 44 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              ReciprocalAing

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(104, "Reciprocal A");
            __builder.CloseElement();
            __builder.AddMarkupContent(105, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(106, "\r\n\r\n");
            __builder.OpenElement(107, "div");
            __builder.AddAttribute(108, "class", "button-column");
            __builder.AddMarkupContent(109, "\r\n    ");
            __builder.OpenElement(110, "button");
            __builder.AddAttribute(111, "class", "btn btn-primary");
            __builder.AddAttribute(112, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 48 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              Powering

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(113, "Power");
            __builder.CloseElement();
            __builder.AddMarkupContent(114, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(115, "\r\n\r\n");
            __builder.OpenElement(116, "div");
            __builder.AddAttribute(117, "class", "button-column");
            __builder.AddMarkupContent(118, "\r\n    ");
            __builder.OpenElement(119, "button");
            __builder.AddAttribute(120, "class", "btn btn-primary");
            __builder.AddAttribute(121, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 52 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              Loging

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(122, "Log");
            __builder.CloseElement();
            __builder.AddMarkupContent(123, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(124, "\r\n\r\n");
            __builder.OpenElement(125, "div");
            __builder.AddAttribute(126, "class", "button-column");
            __builder.AddMarkupContent(127, "\r\n    ");
            __builder.OpenElement(128, "button");
            __builder.AddAttribute(129, "class", "btn btn-primary");
            __builder.AddAttribute(130, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 56 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
                                              Rooting

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(131, "Root");
            __builder.CloseElement();
            __builder.AddMarkupContent(132, "\r\n");
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 60 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
       

    private bool IsTextBoxRed { get; set; }

   
    private string ColorBox => IsTextBoxRed ? "background-color: #B70F0A; color: white; padding: 5px; width: 500px; height: 50px; text-align: center; display: flex; justify-content: center; align-items: center;" : "background-color: #FFECD7; color: black; padding: 5px; width: 500px; height: 50px; text-align: center; display: flex; justify-content: center; align-items: center;";

#line default
#line hidden
#nullable disable
#nullable restore
#line 69 "C:\Users\basil\source\repos\WebsiteCal\WebsiteCal\Pages\Counter.razor"
       

    public string SinCosTanRecip = "";

    public string myNumber { get; set; } = "0";
    public string myNumber2 { get; set; } = "0";

    public string Input1 = "";
    public string Input2 = "";



    public static double Answer;
    public string Error = "Enter a value(s) below and select an operation.";

    public string AnswerString;

    public string Symbol;


    private void Clearing()
    {
        myNumber = "";
        myNumber2 = "";
        Input1 = "";
        Input2 = "";
        Error = "Enter a value(s) below and select an operation.";
        Answer = 0;
        AnswerString = "";
        Symbol = "";
        IsTextBoxRed = false;
        SinCosTanRecip = "";


    }

    private void Empty()
    {
        AnswerString = "";
        Input1 = "";
        Input2 = "";
        Symbol = "";
        Error = "Please Enter a Number";
        SinCosTanRecip = "";
        IsTextBoxRed = true;
    }

    private void EmptyA()
    {
        AnswerString = "";
        Input1 = "";
        Input2 = "";
        Symbol = "";
        Error = "Please Enter Number For A";
        SinCosTanRecip = "";
        IsTextBoxRed = true;

    }


    private void EmptyCannotZero()
    {
        AnswerString = "";
        Answer = 0;

        Symbol = "/";
        Error = "= Not a Number";

        Input1 = myNumber;
        Input2 = myNumber2;

        SinCosTanRecip = "";

        IsTextBoxRed = true;

    }

    private void Adding()
    {
        double number1;
        double number2;

        if (myNumber == "" || myNumber2 == "")
        {
            Empty();
        }
        else if (!double.TryParse(myNumber, out number1) || !double.TryParse(myNumber2, out number2))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Add(double.Parse(myNumber), double.Parse(myNumber2));
            Symbol = "+";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "";
            IsTextBoxRed = false;
        }


    }

    private void Subtracting()
    {
        double number1;
        double number2;

        if (myNumber == "" || myNumber2 == "")
        {
            Empty();
        }
        else if (!double.TryParse(myNumber, out number1) || !double.TryParse(myNumber2, out number2))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Subtract(double.Parse(myNumber), double.Parse(myNumber2));
            Symbol = "-";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "";
            IsTextBoxRed = false;
        }

    }

    private void Multiplying()
    {
        double number1;
        double number2;
        if (myNumber == "" || myNumber2 == "")
        {
            Empty();
        }
        else if (!double.TryParse(myNumber, out number1) || !double.TryParse(myNumber2, out number2))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Multiply(double.Parse(myNumber), double.Parse(myNumber2));
            Symbol = "*";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "";
            IsTextBoxRed = false;
        }

    }

    private void Dividing()
    {
        double number1;
        double number2;
        if (myNumber == "" || myNumber2 == "")
        {

            Empty();
        }
        if (myNumber2 == "0")
        {
            EmptyCannotZero();
        }
        else if (!double.TryParse(myNumber, out number1) || !double.TryParse(myNumber2, out number2))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Divide(double.Parse(myNumber), double.Parse(myNumber2));
            Symbol = "/";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "";
            IsTextBoxRed = false;
        }

    }

    private void Equals()
    {
        double number1;
        double number2;
        if (myNumber == "" || myNumber2 == "")
        {
            Empty();
        }
        else if (!double.TryParse(myNumber, out number1) || !double.TryParse(myNumber2, out number2))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Equals(double.Parse(myNumber), double.Parse(myNumber2));
            Symbol = "==";
            if (Answer == 0)
            {
                AnswerString = "False";

            }
            else
            {
                AnswerString = "True";
            }
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "";
            IsTextBoxRed = false;
        }

    }

    private void Powering()
    {
        double number1;
        double number2;
        if (myNumber == "" || myNumber2 == "")
        {
            Empty();
        }
        else if (!double.TryParse(myNumber, out number1) || !double.TryParse(myNumber2, out number2))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Power(double.Parse(myNumber), double.Parse(myNumber2));
            Symbol = "^";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "";
            IsTextBoxRed = false;
        }

    }

    private void Loging()
    {
        double number1;
        double number2;
        if (myNumber == "" || myNumber2 == "")
        {
            Empty();
        }
        else if (!double.TryParse(myNumber, out number1) || !double.TryParse(myNumber2, out number2))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Log(double.Parse(myNumber), double.Parse(myNumber2));
            Symbol = "log";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "";
            IsTextBoxRed = false;
        }

    }

    private void Rooting()
    {
        double number1;
        double number2;
        if (myNumber == "" || myNumber2 == "")
        {
            Empty();
        }
        else if (!double.TryParse(myNumber, out number1) || !double.TryParse(myNumber2, out number2))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Root(double.Parse(myNumber), double.Parse(myNumber2));
            Symbol = "root";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "";
            IsTextBoxRed = false;
        }

    }

    private void Factorialing()
    {
        double number1;
        if (myNumber == "")
        {
            EmptyA();
        }
        else if (!double.TryParse(myNumber, out number1))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Factorial(double.Parse(myNumber));
            Symbol = "!";
            myNumber2 = "";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "";
            IsTextBoxRed = false;
        }

    }

    private void SinAing()
    {
        double number1;
        if (myNumber == "")
        {
            EmptyA();
        }
        else if (!double.TryParse(myNumber, out number1))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.SinA(double.Parse(myNumber));
            Symbol = "";
            myNumber2 = "";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "Sin ";
            IsTextBoxRed = false;
        }

    }

    private void CosAing()
    {
        double number1;
        if (myNumber == "")
        {
            EmptyA();
        }
        else if (!double.TryParse(myNumber, out number1))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.CosA(double.Parse(myNumber));
            Symbol = "";
            myNumber2 = "";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "Cos ";
            IsTextBoxRed = false;
        }

    }

    private void TanAing()
    {
        double number1;
        if (myNumber == "")
        {
            EmptyA();
        }
        else if (!double.TryParse(myNumber, out number1))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.TanA(double.Parse(myNumber));
            Symbol = "";
            myNumber2 = "";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "Tan ";
            IsTextBoxRed = false;
        }

    }

    private void ReciprocalAing()
    {
        double number1;
        if (myNumber == "")
        {
            EmptyA();
        }
        else if (!double.TryParse(myNumber, out number1))
        {
            Input1 = "";
            Input2 = "";
            AnswerString = "";
            Symbol = "";
            Error = "Invalid Input, Numbers Only";
            IsTextBoxRed = true;

        }
        else
        {
            Answer = Calculator3.Program.Reciprocal(double.Parse(myNumber));
            Symbol = "";
            myNumber2 = "";
            AnswerString = Answer.ToString();
            Input1 = myNumber;
            Input2 = myNumber2 + " =";
            Error = "";
            SinCosTanRecip = "1 / ";
            IsTextBoxRed = false;
        }

    }











#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
